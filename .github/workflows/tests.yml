name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          tools: composer:v2
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
          coverage: none

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Dependencies
        run: |
          composer install --no-interaction --prefer-dist --optimize-autoloader
          npm ci

      - name: Prepare Laravel Application
        run: |
          cp .env.example .env
          php artisan key:generate
          mkdir -p database
          touch database/database.sqlite
          php artisan migrate --force
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite

      - name: Build Assets
        run: npm run build

      # Run each test separately to identify failures
      - name: PHP Code Style (Pint)
        id: pint
        run: ./vendor/bin/pint --test
        continue-on-error: true

      - name: PHP Tests
        id: phptest
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: php artisan test
        continue-on-error: true

      - name: JavaScript Linting
        id: eslint
        run: npm run lint
        continue-on-error: true

      - name: TypeScript Type Check
        id: typescript
        run: npm run ts:check
        continue-on-error: true

      - name: Test Summary
        if: always()
        run: |
          echo "## Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Create a simple pass/fail list
          if [ "${{ steps.pint.outcome }}" == "success" ]; then
            echo "✅ PHP Code Style (Pint)" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ PHP Code Style (Pint)" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ steps.phptest.outcome }}" == "success" ]; then
            echo "✅ PHP Tests" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ PHP Tests" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ steps.eslint.outcome }}" == "success" ]; then
            echo "✅ JavaScript Linting" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ JavaScript Linting" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ steps.typescript.outcome }}" == "success" ]; then
            echo "✅ TypeScript Type Check" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ TypeScript Type Check" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Fail if any test failed
          if [ "${{ steps.pint.outcome }}" != "success" ] || \
             [ "${{ steps.phptest.outcome }}" != "success" ] || \
             [ "${{ steps.eslint.outcome }}" != "success" ] || \
             [ "${{ steps.typescript.outcome }}" != "success" ]; then
            exit 1
          fi